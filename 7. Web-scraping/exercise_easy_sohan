{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "source": [
    "import requests\r\n",
    "import json\r\n",
    "from bs4 import BeautifulSoup\r\n",
    "import pandas as pd"
   ],
   "outputs": [],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "source": [
    "def f2c(f):\r\n",
    "    return round( (f - 32) * (5/9) )\r\n",
    "\r\n",
    "\r\n",
    "def getDay(val):\r\n",
    "    return ' '.join(val.split('<p class=\"period-name\">')[-1].split('</p>')[0].split('<br/>'))"
   ],
   "outputs": [],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "source": [
    "url = 'https://forecast.weather.gov/MapClick.php?x=276&y=148&site=lox&zmx=&zmy=&map_x=276&map_y=148#.YVLh87gzZEY'\r\n",
    "response = requests.get(url)\r\n",
    "\r\n",
    "soup = BeautifulSoup(response.content, \"html.parser\")\r\n",
    "forecastlist = soup.findAll('li', class_ = \"forecast-tombstone\")\r\n",
    "\r\n",
    "day_of_week = []\r\n",
    "short_desc = []\r\n",
    "temp= []\r\n",
    "full_description = []\r\n",
    "\r\n",
    "for i in range(len(forecastlist)):\r\n",
    "\r\n",
    "    day_of_week .append( getDay(str( forecastlist[i].find('p', class_ = \"period-name\") )) )\r\n",
    "    short_desc.append( forecastlist[i].find('p', class_ = \"short-desc\").text )\r\n",
    "\r\n",
    "    temperature = forecastlist[i].find('p', class_ = \"temp\").text\r\n",
    "    #print(temperature)\r\n",
    "    temp_breaks = temperature.split()\r\n",
    "    #print(temp_breaks)\r\n",
    "    temp_celsuis = f2c(float(temp_breaks[1]))\r\n",
    "    #print(temp_celsuis)\r\n",
    "    temp.append(temp_breaks[0] +\" \"+str(temp_celsuis)+\"°C\" )\r\n",
    "    #print(temp_breaks[0] +\" \"+str(temp_celsuis)+\"°C\")\r\n",
    "\r\n",
    "    full_description.append( forecastlist[i].find('img').get('title') )\r\n",
    "\r\n",
    " \r\n",
    "collections = {\"day_of_week\":day_of_week, \"short_desc\":short_desc, \"temp\":temp, \"full_description\":full_description}\r\n",
    "\r\n",
    "df = pd.DataFrame(collections)\r\n",
    "df"
   ],
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day_of_week</th>\n",
       "      <th>short_desc</th>\n",
       "      <th>temp</th>\n",
       "      <th>full_description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Today</td>\n",
       "      <td>PatchyDrizzle thenSunny</td>\n",
       "      <td>High: 22°C</td>\n",
       "      <td>Today: Patchy drizzle before 11am.  Cloudy thr...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Tonight</td>\n",
       "      <td>IncreasingClouds</td>\n",
       "      <td>Low: 16°C</td>\n",
       "      <td>Tonight: Increasing clouds, with a low around ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Wednesday</td>\n",
       "      <td>BecomingSunny</td>\n",
       "      <td>High: 24°C</td>\n",
       "      <td>Wednesday: Cloudy through mid morning, then gr...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Wednesday Night</td>\n",
       "      <td>Clear</td>\n",
       "      <td>Low: 14°C</td>\n",
       "      <td>Wednesday Night: Clear, with a low around 58. ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Thursday</td>\n",
       "      <td>Sunny</td>\n",
       "      <td>High: 28°C</td>\n",
       "      <td>Thursday: Sunny, with a high near 83. Light an...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Thursday Night</td>\n",
       "      <td>Mostly Clear</td>\n",
       "      <td>Low: 16°C</td>\n",
       "      <td>Thursday Night: Mostly clear, with a low aroun...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Friday</td>\n",
       "      <td>Sunny</td>\n",
       "      <td>High: 32°C</td>\n",
       "      <td>Friday: Sunny, with a high near 89.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Friday Night</td>\n",
       "      <td>Mostly Clear</td>\n",
       "      <td>Low: 16°C</td>\n",
       "      <td>Friday Night: Mostly clear, with a low around 61.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Saturday</td>\n",
       "      <td>Sunny</td>\n",
       "      <td>High: 33°C</td>\n",
       "      <td>Saturday: Sunny, with a high near 91.</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       day_of_week               short_desc        temp  \\\n",
       "0          Today    PatchyDrizzle thenSunny  High: 22°C   \n",
       "1        Tonight           IncreasingClouds   Low: 16°C   \n",
       "2      Wednesday              BecomingSunny  High: 24°C   \n",
       "3  Wednesday Night                    Clear   Low: 14°C   \n",
       "4       Thursday                      Sunny  High: 28°C   \n",
       "5   Thursday Night             Mostly Clear   Low: 16°C   \n",
       "6         Friday                      Sunny  High: 32°C   \n",
       "7     Friday Night             Mostly Clear   Low: 16°C   \n",
       "8       Saturday                      Sunny  High: 33°C   \n",
       "\n",
       "                                    full_description  \n",
       "0  Today: Patchy drizzle before 11am.  Cloudy thr...  \n",
       "1  Tonight: Increasing clouds, with a low around ...  \n",
       "2  Wednesday: Cloudy through mid morning, then gr...  \n",
       "3  Wednesday Night: Clear, with a low around 58. ...  \n",
       "4  Thursday: Sunny, with a high near 83. Light an...  \n",
       "5  Thursday Night: Mostly clear, with a low aroun...  \n",
       "6                Friday: Sunny, with a high near 89.  \n",
       "7  Friday Night: Mostly clear, with a low around 61.  \n",
       "8              Saturday: Sunny, with a high near 91.  "
      ]
     },
     "metadata": {},
     "execution_count": 3
    }
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "source": [],
   "outputs": [],
   "metadata": {}
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python",
   "version": "3.8.11",
   "mimetype": "text/x-python",
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "pygments_lexer": "ipython3",
   "nbconvert_exporter": "python",
   "file_extension": ".py"
  },
  "kernelspec": {
   "name": "python3",
   "display_name": "Python 3.8.11 64-bit ('strive': conda)"
  },
  "interpreter": {
   "hash": "bc368ef09387559d0aea07b2d87dca04216072dc39d2eb4cb0eb611402161abe"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}